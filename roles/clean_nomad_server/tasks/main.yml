---

# stop nomad jobs to remove running images
# this might fail if nomad raft cluster loses leader
- name: Stop nomad job {{ pot_nomad_nginx_name }}
  become: yes
  become_user: root
  shell:
    cmd: |
      /root/bin/nomad.sh job stop "{{ pot_nomad_nginx_name }}"
  failed_when: no
  run_once: true
  delegate_to: "{{ groups['servers'][0] }}"

- name: Stop nomad job {{ pot_nomad_nginx_public_name }}
  become: yes
  become_user: root
  shell:
    cmd: |
      /root/bin/nomad.sh job stop "{{ pot_nomad_nginx_public_name }}"
  failed_when: no
  run_once: true
  delegate_to: "{{ groups['servers'][0] }}"

# check if nomad clone exists
- name: Check if {{ pot_nomad_clone_name }} exists by checking ZFS mount
  become: yes
  become_user: root
  ansible.builtin.command: "zfs list -t filesystem zroot/opt/pot/jails/{{ pot_nomad_clone_name }}/m"
  register: pot_nomad_clone_installed
  failed_when: no
  changed_when: pot_nomad_clone_installed.rc != 0

- name: Print out debug messages for nomad clone
  ansible.builtin.debug:
    msg: nomad-server-clone check output is {{ pot_nomad_clone_installed.rc }}

- name: Destroy {{ pot_nomad_clone_name }}
  become: yes
  become_user: root
  shell:
    cmd: |
      pot destroy -F -p "{{ pot_nomad_clone_name }}"
  when: pot_nomad_clone_installed.rc == 0

- name: Check if zroot/{{ my_data_dataset }}/jaildata/nomad exists
  become: yes
  become_user: root
  ansible.builtin.command: "zfs list -t filesystem zroot/{{ my_data_dataset }}/jaildata/nomad"
  register: check_nomaddata_exists
  failed_when: no
  changed_when: "check_nomaddata_exists.rc != 0"

- name: Wipe nomad persistant storage
  become: yes
  become_user: root
  shell:
    cmd: |
      cd /mnt/{{ my_data_dataset }}/jaildata/nomad && rm -rf *
  when: check_nomaddata_exists.rc == 0
